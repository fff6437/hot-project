{"version":3,"file":"src_pages_battle_selectPlayer_js.103b55d8.bundlesss.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAEA;AAAA;AAAA;AAfA;AAsBA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AADA;AAFA;AASA;;AACA;AAAA;;;;;;;;;;AArEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAiBA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAYA;;;;AAzIA","sources":["webpack://zlf/./src/compontent/formiks.js","webpack://zlf/./src/pages/battle/selectPlayer.js"],"sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\n\nconst formiks = (props) => {\n  const { style, name, isHave, num, loading, error } = props;\n  return !isHave ? (\n    <Formik\n      initialValues={{ [name]: \"\" }}\n      validate={(values) => {\n        const errors = {};\n        if (!values[name]) {\n          errors[name] = \"请输入\";\n        }\n        return errors;\n      }}\n      onSubmit={(values, actions) => {\n        actions.setSubmitting(false);\n        props.setPlay(values[name], num);\n      }}\n    >\n      {(formProps) => (\n        <form\n          onSubmit={formProps.handleSubmit}\n          className={`${style[\"battle-form-content\"]}`}\n        >\n          <input\n            type=\"text\"\n            onChange={formProps.handleChange}\n            value={formProps.values[name]}\n            name={name}\n            placeholder=\"github username\"\n          />\n          {formProps.errors[name] && (\n            <div id={style.feedback}>{formProps.errors[name]}</div>\n          )}\n          <button type=\"submit\" disabled={loading}>\n            Submit\n          </button>\n        </form>\n      )}\n    </Formik>\n  ) : (\n    <div className={`${style[\"battle-selectInfo\"]}`}>\n      {error ? (\n        <div\n          className={`${style[\"battle-basicInfo\"]}`}\n          style={{ color: \"red\" }}\n        >\n          {error}\n        </div>\n      ) : (\n        <div className={`${style[\"battle-basicInfo\"]}`}>\n          <img src={props.img} alt=\"\" />\n          <span>{props.player}</span>\n        </div>\n      )}\n      <div\n        onClick={() => props.clearPlayer(num)}\n        role=\"button\"\n        tabIndex={-1}\n        onKeyUp={() => {}}\n      >\n        <i\n          className=\"fa fa-times-circle\"\n          style={{\n            color: \"red\",\n          }}\n        />\n      </div>\n    </div>\n  );\n};\nexport default formiks;\n","import React, { useState } from \"react\";\n// import { Formik } from \"formik\";\nimport Formiks from \"_src/compontent/formiks\";\nimport axios from \"axios\";\n// import { useFormik } from 'formik';\nimport style from \"./battle.css\";\n\nexport default () => {\n  // const [checkedName, setCheckedName] = useState(\"All\");\n  const [playerOne, setPlayerOne] = useState(\"\");\n  const [playerTwo, setPlayerTwo] = useState(\"\");\n  const [oneImg, setOneImg] = useState(\"\");\n  const [oneLoading, setOneLoading] = useState(false);\n  const [twoLoading, setTwoLoading] = useState(false);\n  const [oneError, setOneError] = useState(\"\");\n  const [twoError, setTwoError] = useState(\"\");\n\n  const [twoImg, setTwoImg] = useState(\"\");\n\n  const setPlay = (e, name) => {\n    if (name === \"one\") {\n      setOneLoading(true);\n      setPlayerOne(e);\n      axios\n        .get(`https://api.github.com/users/${e}`)\n        .then(() => {\n          setOneImg(`https://github.com/${e}.png?size=200`);\n        })\n        .catch((error) => {\n          setOneError(error.response.data.message);\n        })\n        .finally(() => {\n          setOneLoading(false);\n        });\n      // setOneImg(`https://github.com/${e}.png?size=200`);\n    } else {\n      setTwoLoading(true);\n      setPlayerTwo(e);\n      axios\n        .get(`https://api.github.com/users/${e}`)\n        .then(() => {\n          setTwoImg(`https://github.com/${e}.png?size=200`);\n        })\n        .catch((error) => {\n          setTwoError(error.response.data.message);\n        })\n        .finally(() => {\n          setTwoLoading(false);\n        });\n    }\n  };\n\n  const battle = () => {\n    window.location.href = `#/battle/result?playerOne=${playerOne}&playerTwo=${playerTwo}`;\n    // props.battle();\n  };\n\n  const clearPlayer = (name) => {\n    if (name === \"one\") {\n      setPlayerOne(\"\");\n      setOneImg(\"\");\n      setOneError(\"\");\n    } else {\n      setPlayerTwo(\"\");\n      setTwoImg(\"\");\n      setTwoError(\"\");\n    }\n  };\n  return (\n    <div className={`${style[\"battle-select\"]}`}>\n      <div className={`${style[\"battle-title\"]}`}>Instructions</div>\n      <div className={`${style[\"battle-center\"]}`}>\n        <div>\n          <div className={`${style[\"battle-info\"]}`}>\n            Enter two Github Users\n          </div>\n          <div className={`${style[\"battle-column\"]}`}>\n            <i className={`fa fa-users ${style.org}`} />\n          </div>\n        </div>\n        <div>\n          <div className={`${style[\"battle-info\"]}`}>Battle</div>\n          <div className={`${style[\"battle-column\"]}`}>\n            <i className={`fa fa-fighter-jet ${style.gray}`} />\n          </div>\n        </div>\n        <div>\n          <div className={`${style[\"battle-info\"]}`}>See the winner</div>\n          <div className={`${style[\"battle-column\"]}`}>\n            <i className={`fa fa-trophy ${style.yellow}`} />\n          </div>\n        </div>\n      </div>\n      <h3>Players</h3>\n      <div className={`${style[\"battle-form-content-wrap\"]}`}>\n        <div>\n          <h3> Player One </h3>\n          <Formiks\n            style={style}\n            num=\"one\"\n            loading={oneLoading}\n            error={oneError}\n            name=\"playerTwo\"\n            isHave={oneImg || oneError}\n            setPlay={(v, i) => {\n              setPlay(v, i);\n            }}\n            clearPlayer={clearPlayer}\n            img={oneImg}\n            player={playerOne}\n          />\n        </div>\n        <div>\n          <h3> Player Two </h3>\n          <Formiks\n            style={style}\n            num=\"two\"\n            name=\"playerTwo\"\n            loading={twoLoading}\n            error={twoError}\n            isHave={twoImg || twoError}\n            setPlay={(v, i) => {\n              setPlay(v, i);\n            }}\n            clearPlayer={clearPlayer}\n            img={twoImg}\n            player={playerTwo}\n          />\n        </div>\n      </div>\n      {oneImg && twoImg && twoImg !== oneImg && (\n        <div className={`${style[\"battle-button\"]}`}>\n          <button\n            type=\"button\"\n            onClick={() => {\n              battle();\n            }}\n          >\n            Battle\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"names":[],"sourceRoot":""}