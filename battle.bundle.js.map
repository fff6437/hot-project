{"version":3,"file":"battle.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AAAA;AAKA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AAJA;AAVA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAIA;AAAA;AAIA;AAAA;AAIA;AAAA;AAKA;AAAA;AAIA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAIA;AAAA;AAIA;AAAA;AAIA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAKA;;;;AArHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;;AAEA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AADA;AAMA;AAAA;AACA;AAAA;AAEA;AADA;AAMA;AAAA;AACA;AAAA;AAEA;AADA;AAOA;AAAA;AAKA;AAAA;AAAA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAEA;AAAA;AAfA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AADA;AAFA;AAcA;AAAA;AAAA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAEA;AAAA;AAfA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AADA;AAFA;AAYA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAYA;;;;AAlMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA","sources":["webpack://zlf/./src/pages/battle/index.js","webpack://zlf/./src/pages/battle/result.js","webpack://zlf/./src/pages/battle/selectPlayer.js","webpack://zlf/./src/pages/battle/battle.css?c724"],"sourcesContent":["import React from \"react\";\r\nimport SelectPlayer from \"src/pages/battle/selectPlayer\";\r\nimport Result from \"src/pages/battle/result\";\r\n\r\nexport default (props) => (\r\n    <div>\r\n        <div>\r\n          {!props.isBattle ? (\r\n            <SelectPlayer\r\n              battle={() => {\r\n                props.battle();\r\n              }}\r\n            />\r\n          ) : (\r\n            <Result\r\n              player={props.player}\r\n              reset={() => {\r\n                props.reset();\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n    </div>\r\n  );\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport style from \"./battle.css\";\nimport load from '../index.css';\n\nconsole.log(load);\n\nexport default (props) => {\n  const [oneInfos, setOneInfos] = useState({});\n  const [loadingOne, setOneloading] = useState(false);\n  const [loadingTwo, setTwoloading] = useState(false);\n  const [twoInfos, setTwoInfos] = useState({});\n\n  useEffect(async () => {\n    axios\n      .get(`https://api.github.com/users/${props.player.playerOne}`)\n      .then((res) => {\n        setOneInfos(res.data);\n        setOneloading(true);\n      });\n    axios\n      .get(`https://api.github.com/users/${props.player.playerTwo}`)\n      .then((res) => {\n        setTwoInfos(res.data);\n        setTwoloading(true);\n      });\n  }, []);\n  const reset = () => {\n    window.location.href = \"#/battle\";\n    props.reset();\n  };\n\n  return loadingOne && loadingTwo ? (\n    <div className={`${style['result-result']}`}>\n      <div className={`${style['result-center']}`}>\n        <div>\n          <div className={`${style['result-info']}`}>\n            {oneInfos.public_repos > twoInfos.public_repos ? \"Winner\" : \"Loser\"}\n          </div>\n          <div>\n            <img src={oneInfos.avatar_url} alt=\"\" />\n          </div>\n          <div className={`${style.center} ${style.score}`}>\n            Scores: {oneInfos.public_repos}\n          </div>\n          <div className={`${style.center} ${style['result-name']}`}>{oneInfos.name}</div>\n          <div>\n            <i className=\"fa fa-location-arrow\" />\n            {oneInfos.location}\n          </div>\n          <div>\n            <i className=\"fa fa-group\" />\n            {oneInfos.followers}\n          </div>\n          <div>\n            <i className=\"fa fa-user-plus\" />\n            {oneInfos.following}\n          </div>\n          <div>\n            <i className=\"fa fa-code\"/>\n            {oneInfos.public_repos}\n          </div>\n        </div>\n        <div>\n          <div className={`${style['result-info']}`}>\n            {twoInfos.public_repos > oneInfos.public_repos ? \"Winner\" : \"Loser\"}\n          </div>\n          <div>\n            <img src={twoInfos.avatar_url} alt=\"\" />\n          </div>\n          <div className={style.center}>\n            Scores: {twoInfos.public_repos}\n          </div>\n          <div className={`${style.center} ${style['result-name']}`}>{twoInfos.name}</div>\n          <div>\n            <i className=\"fa fa-location-arrow\"/>\n            {twoInfos.location}\n          </div>\n          <div>\n            <i className=\"fa fa-group\" />\n            {twoInfos.followers}\n          </div>\n          <div>\n            <i className=\"fa fa-user-plus\"/>\n            {twoInfos.following}\n          </div>\n          <div>\n            <i className=\"fa fa-code\" />\n            {twoInfos.public_repos}\n          </div>\n        </div>\n      </div>\n      <div className={style['result-btn']}>\n        <button\n          type=\"button\"\n          onClick={() => {\n            reset();\n          }}\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  ) : (\n    <div className={load.loader}>\n        <div className={load['loader-inner']}>\n          <div className={load['loader-line-wrap']}>\n            <div className={load['loader-line']} />\n          </div>\n          <div className={load['loader-line-wrap']}>\n            <div className={load['loader-line']} />\n          </div>\n          <div className={load['loader-line-wrap']}>\n            <div className={load['loader-line']} />\n          </div>\n          <div className={load['loader-line-wrap']}>\n            <div className={load['loader-line']} />\n          </div>\n          <div className={load['loader-line-wrap']}>\n            <div className={load['loader-line']} />\n          </div>\n        </div>\n      </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Formik } from \"formik\";\n// import { useFormik } from 'formik';\nimport style from \"./battle.css\";\n\nexport default (props) => {\n  // const [checkedName, setCheckedName] = useState(\"All\");\n  const [playerOne, setPlayerOne] = useState(\"\");\n  const [playerTwo, setPlayerTwo] = useState(\"\");\n  const [oneImg, setOneImg] = useState(\"\");\n  const [twoImg, setTwoImg] = useState(\"\");\n\n  const setPlay = (e, name) => {\n    if (name === \"one\") {\n      setPlayerOne(e);\n      setOneImg(`https://github.com/${e}.png?size=200`);\n    } else {\n      setPlayerTwo(e);\n      setTwoImg(`https://github.com/${e}.png?size=200`);\n    }\n  };\n\n  const battle = () => {\n    window.location.href = `#/result?playerOne=${playerOne}&playerTwo=${playerTwo}`;\n    props.battle();\n  };\n\n  const clearPlayer = (name) => {\n    if (name === \"one\") {\n      setPlayerOne(\"\");\n      setOneImg(\"\");\n    } else {\n      setPlayerTwo(\"\");\n      setTwoImg(\"\");\n    }\n  };\n  return (\n    <div className={`${style['battle-select']}`}>\n      <div className={`${style['battle-title']}`}>Instructions</div>\n      <div className={`${style['battle-center']}`}>\n        <div>\n          <div className={`${style['battle-info']}`}>Enter two Github Users</div>\n          <div className={`${style['battle-column']}`}>\n            <i\n              className={`fa fa-users ${style.org}`}\n            />\n          </div>\n        </div>\n        <div>\n          <div className={`${style['battle-info']}`}>Battle</div>\n          <div className={`${style['battle-column']}`}>\n            <i\n              className={`fa fa-fighter-jet ${style.gray}`}\n            />\n          </div>\n        </div>\n        <div>\n          <div className={`${style['battle-info']}`}>See the winner</div>\n          <div className={`${style['battle-column']}`}>\n            <i\n              className={`fa fa-trophy ${style.yellow}`}\n            />\n          </div>\n        </div>\n      </div>\n      <h3>Players</h3>\n      <div className={`${style['battle-form-content-wrap']}`}>\n        <div>\n          <h3> Player One </h3>\n          {!oneImg ? (\n            <Formik\n              initialValues={{ playerOne: \"\" }}\n              validate={(values) => {\n                const errors = {};\n                if (!values.playerOne) {\n                  errors.playerOne = \"Required\";\n                }\n                return errors;\n              }}\n              onSubmit={(values, actions) => {\n                console.log(values);\n                actions.setSubmitting(false);\n                setPlay(values.playerOne, \"one\");\n              }}\n            >\n              {(formProps) => (\n                <form\n                  onSubmit={formProps.handleSubmit}\n                  className={`${style['battle-form-content']}`}\n                >\n                  <input\n                    type=\"text\"\n                    onChange={formProps.handleChange}\n                    value={formProps.values.playerOne}\n                    name=\"playerOne\"\n                    placeholder=\"github username\"\n                  />\n                  {formProps.errors.playerOne && (\n                    <div id=\"feedback\">{formProps.errors.playerOne}</div>\n                  )}\n                  <button type=\"submit\">Submit</button>\n                </form>\n              )}\n            </Formik>\n          ) : (\n            <div className={`${style['battle-selectInfo']}`}>\n              <div className={`${style['battle-basicInfo']}`}>\n                <img src={oneImg} alt=\"\" />\n                <span>{playerOne}</span>\n              </div>\n              <div\n                onClick={() => clearPlayer(\"one\")}\n                role=\"button\"\n                tabIndex={-1}\n                onKeyUp={() => {}}\n              >\n                <i\n                  className=\"fa fa-times-circle\"\n                  style={{\n                      color: \"red\",\n                    }}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n        <div>\n          <h3> Player Two </h3>\n          {!twoImg ? (\n            <Formik\n              initialValues={{ playerTwo: \"\" }}\n              validate={(values) => {\n                const errors = {};\n                if (!values.playerTwo) {\n                  errors.playerTwo = \"Required\";\n                }\n                return errors;\n              }}\n              onSubmit={(values, actions) => {\n                actions.setSubmitting(false);\n                setPlay(values.playerTwo, \"two\");\n              }}\n            >\n              {(formProps) => (\n                <form\n                  onSubmit={formProps.handleSubmit}\n                  className={`${style['battle-form-content']}`}\n                >\n                  <input\n                    type=\"text\"\n                    onChange={formProps.handleChange}\n                    value={formProps.values.playerTwo}\n                    name=\"playerTwo\"\n                    placeholder=\"github username\"\n                  />\n                  {formProps.errors.playerTwo && (\n                    <div id=\"feedback\">{formProps.errors.playerTwo}</div>\n                  )}\n                  <button type=\"submit\">Submit</button>\n                </form>\n              )}\n            </Formik>\n          ) : (\n            <div className={`${style['battle-selectInfo']}`}>\n              <div className={`${style['battle-basicInfo']}`}>\n                <img src={twoImg} alt=\"\" />\n                <span>{playerTwo}</span>\n              </div>\n              <div\n                onClick={() => clearPlayer(\"two\")}\n                role=\"button\"\n                tabIndex={-2}\n                onKeyUp={() => {}}\n              >\n                <i\n                  className=\"fa fa-times-circle\"\n                  style={{\n                    color: \"red\",\n                  }}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      {oneImg && twoImg && (\n        <div className={`${style['battle-button']}`}>\n          <button\n            type=\"button\"\n            onClick={() => {\n              battle();\n            }}\n          >\n            Battle\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"battle-select\":\"qcEIFLHGRL2QU2zYjunJ\",\"battle-title\":\"WpiBuMTvpeACGE48YF6Z\",\"battle-center\":\"U11LM8NyWNxtly6JH7zU\",\"battle-info\":\"nZKmjEspN6k54fk10lkh\",\"battle-column\":\"a7RTzlOH6xI_s_ZUa1_V\",\"battle-form-content-wrap\":\"cHZkdH76I04eLZ7EEvkl\",\"battle-form-content\":\"z8_iS0I9mAt_SiW37Thx\",\"feedback\":\"_fXfP7cIGmwD64g1UIyb\",\"battle-selectInfo\":\"nMPWj5cPZsCGPFoT4ptm\",\"battle-basicInfo\":\"Ieee5M0sO9ELVTlCFLsA\",\"battle-button\":\"auuPWhyLfNhuW2QNDQKR\",\"center\":\"X7P91Tl88aTubyjBoIVN\",\"score\":\"OyWDe4wgU5YQIGMiN1zf\",\"yellow\":\"XOVsX5fMro6OLUexa9bS\",\"gray\":\"D3Qa2lxGHQj8UXWoqk88\",\"org\":\"_JSgWMxFAQEqXlQQKc0Z\",\"result-center\":\"O5xc36kYuQSzXCDzDJIQ\",\"result-info\":\"oSB6boLKYo4uBUMbcYmE\",\"result-name\":\"Oqbb0HAXvfuzxxHrS_mP\",\"result-btn\":\"_4n7aAkrIfVCCpLFWQmp\"};"],"names":[],"sourceRoot":""}